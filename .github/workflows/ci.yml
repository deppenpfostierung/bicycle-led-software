name: Firmware CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-idf:
    name: Setup ESP-IDF
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get esp-idf version
        id: get-idf-version
        run: |
          # Get the commit hash of the ./esp-idf submodule without checking it out
          git submodule update --init --depth 1
          cd esp-idf
          idf_version=$(git rev-parse HEAD)
          echo "idf_version=$idf_version" >> $GITHUB_ENV
          echo "home=$HOME" >> $GITHUB_ENV

      - name: Cache esp-idf
        uses: actions/cache@v4
        with:
          path: ${{ env.home }}/.espressif
          key: esp-idf-${{ env.idf_version }}

      - name: Set up ESP-IDF
        run: |
          cd esp-idf
          ./install.sh
          cd ../
          . export.sh
          idf.py --version

  get-configs:
    name: Get Configs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get configs
        run: |
          CONFIGS=$(./switchconf.sh --list) # outputs the list of configs separated by spaces
          # format it to json array
          CONFIGS=$(echo $CONFIGS | sed 's/ /", "/g')
          CONFIGS="[\"$CONFIGS\"]"
          # set the output variable
          echo "configs=$CONFIGS" >> $GITHUB_ENV

  build:
    name: Build ${{ matrix.config }}
    runs-on: ubuntu-latest
    needs: [setup-idf, get-configs]
    strategy:
      matrix:
        config: ${{ fromJson(env.configs) }}
    steps:
      - name: Print matrix
        env:
          CONFIG: ${{ matrix.config }}
        run:
          echo "Matrix config: ${CONFIG}"
