{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About the bicycle-led-pcb","text":"<p>This is the documentation for the bicycle LED pcb software project.</p> <p>The project is about creating a PCB that can control multiple lights and other things on a bicycle, and read out various sensors. It also has a built-in screen that can show all kinds of information to the bicycle rider.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>You are interested in the project? Great! You can find how to get started in the Getting Started section.</p>"},{"location":"getting-started/hardware/","title":"Getting the hardware","text":"<p>Note</p> <p>This section is still work in progress. Not everything will be accurate or complete.</p>"},{"location":"getting-started/hardware/#ordering-it-yourself","title":"Ordering it yourself","text":"<p>The PCB design is created using the free and open source software KiCAD. You can find installation instructions and more information about it here.</p> <p>For your convenience, the PCB design files are available in the hardware repository. You can find it here. However, we do not guarantee that the files work, are up to date or can be produced.</p> <p>For ordering with JLCPCB, we recommend using this plugin for KiCAD.</p>"},{"location":"getting-started/hardware/#wip","title":"WIP","text":""},{"location":"getting-started/hardware/#after-receiving-the-hardware","title":"After receiving the hardware","text":"<p>When you received the hardware, you can start flashing the firmware.</p>"},{"location":"getting-started/software/","title":"Setting up the software repository","text":"<p>Note</p> <p>This section is still work in progress. Not everything will be accurate or complete.</p>"},{"location":"getting-started/software/#deciding-where-to-get-the-software-from","title":"Deciding where to get the software from","text":"<p>You can either use the precompiled binaries found in the releases or compile the software yourself.</p> <p>If you choose to compile the software yourself, continue reading.</p>"},{"location":"getting-started/software/#compiling-the-software-yourself","title":"Compiling the software yourself","text":"<p>First, you need to clone the repository:</p> <pre><code>$ git clone --recurse-submodules https://github.com/deppenpfostierung/bicycle-led-software.git\n\n$ cd bicycle-led-software\n</code></pre> <p>You might also need to install the icon converter script. If you are under archlinux, you can do so by running this:</p> <pre><code>$ yay -S python-rgb565-converter\n</code></pre> <p>If not, you can install it using pip:</p> <pre><code>$ pip install rgb565-converter\n</code></pre> <p>Then, you need to install the required dependencies for the ESP-IDF framework.</p> <pre><code>$ ./esp-idf/install.sh\n</code></pre> <p>Now, use <code>switchconf.sh</code> to select a configuration:</p> <pre><code>$ ./switchconf.sh --list # List all configurations\n\n$ ./switchconf.sh &lt;configuration&gt; # Select a configuration\n</code></pre> <p>If everything looks good, you can activate the ESP-IDF environment and build the software:</p> <pre><code>$ . export.sh\n\n$ idf.py build\n</code></pre>"},{"location":"getting-started/software/#flashing-the-software","title":"Flashing the software","text":"<p>For convenience, you can use the scripts found in the <code>tools/</code> directory to flash the software.</p>"}]}